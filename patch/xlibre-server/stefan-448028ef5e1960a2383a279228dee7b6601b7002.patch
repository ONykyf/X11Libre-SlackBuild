From 448028ef5e1960a2383a279228dee7b6601b7002 Mon Sep 17 00:00:00 2001
From: stefan11111 <stefan11111@shitposting.expert>
Date: Fri, 1 Aug 2025 01:54:34 +0300
Subject: [PATCH] xfree86: loader: simplify setting IgnoreABI option

IgnoreABI option is kept in a single bit of an unsigned long variable
LoaderOptions that has no other use.

This patch replaces it with a variable named LoaderIgnoreAbi
and a proc for setting it.

Inspired by https://github.com/X11Libre/xserver/commit/b61b35a0b3f73b154ea8f3d2c943b849ae9fa5d0

Signed-off-by: stefan11111 <stefan11111@shitposting.expert>
---
 hw/xfree86/common/xf86Init.c    |  4 ++--
 hw/xfree86/loader/loader.c      | 11 ++++++-----
 hw/xfree86/loader/loader.h      |  2 +-
 hw/xfree86/loader/loaderProcs.h |  6 ++----
 hw/xfree86/loader/loadmod.c     | 20 ++++++--------------
 5 files changed, 17 insertions(+), 26 deletions(-)

diff --git a/hw/xfree86/common/xf86Init.c b/hw/xfree86/common/xf86Init.c
index 41bcb9983e..29a9f69fa6 100644
--- a/hw/xfree86/common/xf86Init.c
+++ b/hw/xfree86/common/xf86Init.c
@@ -332,7 +332,7 @@ InitOutput(ScreenInfo * pScreenInfo, int argc, char **argv)
         LoaderSetPath(xf86ModulePath);
 
         if (xf86Info.ignoreABI) {
-            LoaderSetOptions(LDR_OPT_ABI_MISMATCH_NONFATAL);
+            LoaderSetIgnoreAbi();
         }
 
         if (xf86DoShowOptions)
@@ -962,7 +962,7 @@ ddxProcessArgument(int argc, char **argv, int i)
         return 1;
     }
     if (!strcmp(argv[i], "-ignoreABI")) {
-        LoaderSetOptions(LDR_OPT_ABI_MISMATCH_NONFATAL);
+        LoaderSetIgnoreAbi();
         return 1;
     }
     if (!strcmp(argv[i], "-verbose")) {
diff --git a/hw/xfree86/loader/loader.c b/hw/xfree86/loader/loader.c
index 2f540cff0a..c866b18dd2 100644
--- a/hw/xfree86/loader/loader.c
+++ b/hw/xfree86/loader/loader.c
@@ -146,21 +146,22 @@ LoaderUnload(const char *name, void *handle)
         dlclose(handle);
 }
 
-unsigned long LoaderOptions = 0;
-
+Bool LoaderIgnoreAbi = FALSE;
 Bool is_nvidia_proprietary = FALSE;
 
 void
-LoaderSetOptions(unsigned long opts)
+LoaderSetIgnoreAbi(void)
 {
-    LoaderOptions |= opts;
+    /* Only used to keep consistency with the loader api */
+    /* This really doesn't have to be a proc */
+    LoaderIgnoreAbi = TRUE;
 }
 
 Bool
 LoaderShouldIgnoreABI(void)
 {
     /* The nvidia proprietary DDX driver calls this deprecated function */
-    return is_nvidia_proprietary || (LoaderOptions & LDR_OPT_ABI_MISMATCH_NONFATAL);
+    return is_nvidia_proprietary || LoaderIgnoreAbi;
 }
 
 int
diff --git a/hw/xfree86/loader/loader.h b/hw/xfree86/loader/loader.h
index 3ee9c075b2..43d6b5c5a7 100644
--- a/hw/xfree86/loader/loader.h
+++ b/hw/xfree86/loader/loader.h
@@ -68,7 +68,7 @@ typedef struct {
 } ModuleVersions;
 extern const ModuleVersions LoaderVersionInfo;
 
-extern unsigned long LoaderOptions;
+extern Bool LoaderIgnoreAbi;
 
 extern Bool is_nvidia_proprietary;
 
diff --git a/hw/xfree86/loader/loaderProcs.h b/hw/xfree86/loader/loaderProcs.h
index 8b16cb7ea4..fc96be2d32 100644
--- a/hw/xfree86/loader/loaderProcs.h
+++ b/hw/xfree86/loader/loaderProcs.h
@@ -79,11 +79,9 @@ void LoaderUnload(const char *, void *);
 unsigned long LoaderGetModuleVersion(ModuleDescPtr mod);
 
 void LoaderResetOptions(void);
-void LoaderSetOptions(unsigned long);
 
-const char **LoaderListDir(const char *, const char **);
+void LoaderSetIgnoreAbi(void);
 
-/* Options for LoaderSetOptions */
-#define LDR_OPT_ABI_MISMATCH_NONFATAL		0x0001
+const char **LoaderListDir(const char *, const char **);
 
 #endif                          /* _LOADERPROCS_H */
diff --git a/hw/xfree86/loader/loadmod.c b/hw/xfree86/loader/loadmod.c
index 6a96d69af6..e010f100f8 100644
--- a/hw/xfree86/loader/loadmod.c
+++ b/hw/xfree86/loader/loadmod.c
@@ -457,27 +457,19 @@ CheckVersion(const char *module, XF86ModuleVersionInfo * data,
             vermaj = GET_ABI_MAJOR(ver);
             vermin = GET_ABI_MINOR(ver);
             if (abimaj != vermaj) {
-                MessageType errtype;
-                if (LoaderOptions & LDR_OPT_ABI_MISMATCH_NONFATAL)
-                    errtype = X_WARNING;
-                else
-                    errtype = X_ERROR;
-                LogMessageVerb(errtype, 0, "%s: module ABI major version (%d) "
+                LogMessageVerb(LoaderIgnoreAbi ? X_WARNING : X_ERROR, 0,
+                               "%s: module ABI major version (%d) "
                                "doesn't match the server's version (%d)\n",
                                module, abimaj, vermaj);
-                if (!(LoaderOptions & LDR_OPT_ABI_MISMATCH_NONFATAL))
+                if (!LoaderIgnoreAbi)
                     return FALSE;
             }
             else if (abimin > vermin) {
-                MessageType errtype;
-                if (LoaderOptions & LDR_OPT_ABI_MISMATCH_NONFATAL)
-                    errtype = X_WARNING;
-                else
-                    errtype = X_ERROR;
-                LogMessageVerb(errtype, 0, "%s: module ABI minor version (%d) "
+                LogMessageVerb(LoaderIgnoreAbi ? X_WARNING : X_ERROR, 0,
+                               "%s: module ABI minor version (%d) "
                                "is newer than the server's version (%d)\n",
                                module, abimin, vermin);
-                if (!(LoaderOptions & LDR_OPT_ABI_MISMATCH_NONFATAL))
+                if (!LoaderIgnoreAbi)
                     return FALSE;
             }
         }
